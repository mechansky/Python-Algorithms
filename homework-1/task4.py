"""
Задание 4.
Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.
Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.
Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
Задание творческое. Здесь нет жестких требований к выполнению.
"""


accounts = {
    'qwerty': '12345',
    'admin': 'admin',
    'user': 'wtf'
}

activated_accounts = []

#Сложность первой функции - O(n2), сложность второй функции O(N), быстрее будет функция №2, т.к. в ней операция с множествами, которая стоит O(1)
# и вместо линейного поиска по словарю accounts, прямая проверка логина с обработкой ошибки, в случе отсутствия логина в accounts.


def authentication():
    while True:
        login = input('введите логин: ')
        password = input('введите пароль: ')
        if login in accounts:
            if password == accounts[login]:
                if login in activated_accounts:
                    print('вы зашли в систему')
                else:
                    if input('ваша учетная запись не активирована!\nдля активации напишите START: ').lower() == 'start':
                        activated_accounts.append(login)
                        print('Учетная запись активирована. Вы зашли в систему')
                        break
            elif password != accounts[login]:
                print('неправильный пароль. попробуйте еще раз')
        else:
            print('такого аккаунта не существует. попробуйте еще раз')


authentication()


activated_accounts2 = set()




def authentication2():
    while True:
        login = input('введите логин: ')
        password = input('введите пароль: ')
        try:
            if accounts[login] == password:
                print(f'добро пожаловать, {login}')
                if login not in activated_accounts2:
                    if input('вам нужно активировать аккаунт, для активации нажмите "1" ').lower() == '1':
                        activated_accounts2.add(login)
                        print('аккаунт активирован\nдобро пожаловать!')
                        break
        except KeyError:
            print('неправильный пароль!')

authentication2()